import matplotlib.pyplot as plt
import pandas as pd

plt.rcParams["font.family"] = "sans-serif"
plt.rcParams["font.sans-serif"] = "times new roman"
plt.rcParams['lines.linewidth'] = 1.25
plt.rcParams['axes.xmargin'] = 0
plt.rcParams['axes.ymargin'] = 0
plt.rcParams['axes.autolimit_mode'] = 'round_numbers'
  
s = pd.read_csv('standard fire curve.csv')
t10 = pd.read_csv('T10.csv')

#ax = plt.axes()     
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#ax.set_xlim([0,100])
#plt.plot(s['ISO 834-Time'],s['ISO 834-Temp'], linestyle='--', label='Standard fire curve', color='maroon')
#plt.plot(t10['Time in Minutes'],t10['Furnace-Top-Left'], label='T10-Furnace-Top-Left', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Furnace-Top-Right'], label='T10-Furnace-Top-Right', color='C0', markevery=1000, ms=4, marker='v')
#plt.plot(t10['Time in Minutes'],t10['Furnace-Bottom-Left'], label='T10-Furnace-Bottom-Left', color='C2', markevery=1000, ms=4, marker='d')
#plt.plot(t10['Time in Minutes'],t10['Furnace-Bottom-Right'], label='T10-Furnace-Bottom-Right', color='C4', markevery=1000, ms=4, marker='>')
##plt.title('T10-Furnace')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Furnace.pdf', bbox_inches='tight')
#plt.show()

ax = plt.axes()     
ax.yaxis.grid(True, linestyle=':') # horizontal lines
ax.xaxis.grid(True, linestyle=':') # vertical lines
ax.xaxis.label.set_size(12)
ax.yaxis.label.set_size(12)
ax.set_xlim([0,100])
plt.plot(s['ISO 834-Time'],s['ISO 834-Temp'], linestyle='--', label='Standard fire curve', color='maroon')
plt.plot(t10['Time in Minutes'],t10['Average-Furnace'], label='T10-Furnace', color='maroon')
plt.plot(t10['Time in Minutes'],t10['Average-Pb1'], label='T10-Pb1', color='red', markevery=1000, ms=4, marker='o')
plt.plot(t10['Time in Minutes'],t10['Average-Pb1-Pb2'], label='T10-Pb1-Pb2', color='C0', markevery=1000, ms=4, marker='v')
plt.plot(t10['Time in Minutes'],t10['Average-Pb2'], label='T10-Pb2', color='C1', markevery=1000, ms=4, marker='s')
plt.plot(t10['Time in Minutes'],t10['Average-Pb3'], label='T10-Pb3', color='C2', markevery=1000, ms=4, marker='d')
plt.plot(t10['Time in Minutes'],t10['Average-Pb3-Pb4'], label='T10-Pb3-Pb4', color='C4', markevery=1000, ms=4, marker='>')
plt.plot(t10['Time in Minutes'],t10['Average-Pb4'], label='T10-Pb4', color='C6', markevery=1000, ms=4, marker='+')
#plt.title('T10-Average Plasterboard')
plt.xlabel('Time(min)', fontsize=14)
plt.ylabel('Temperature(°C)', fontsize=14)
plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
plt.gcf()
plt.savefig('T10-Plasterboard.pdf', bbox_inches='tight')
plt.show()

#ax = plt.axes()     
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#ax.set_xlim([0,100])
#plt.plot(s['ISO 834-Time'],s['ISO 834-Temp'], linestyle='--', label='Standard fire curve', color='maroon')
#plt.plot(t10['Time in Minutes'],t10['Pb1-Top-Left'], label='T10-Pb1-Top-Left', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Pb1-Top-Right'], label='T10-Pb1-Top-Right', color='C0', markevery=1000, ms=4, marker='v')
#plt.plot(t10['Time in Minutes'],t10['Pb1-Mid-Mid'], label='T10-Pb1-Mid-Mid', color='C1', markevery=1000, ms=4, marker='s')
#plt.plot(t10['Time in Minutes'],t10['Pb1-Bottom-Left'], label='T10-Pb1-Bottom-Left', color='C2', markevery=1000, ms=4, marker='d')
#plt.plot(t10['Time in Minutes'],t10['Pb1-Bottom-Right'], label='T10-Pb1-Bottom-Right', color='C4', markevery=1000, ms=4, marker='>')
##plt.title('T10-Pb1')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Pb1.pdf', bbox_inches='tight')
#plt.show()

#ax = plt.axes()     
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#ax.set_xlim([0,100])
##plt.plot(s['ISO 834-Time'],s['ISO 834-Temp'], linestyle='--', label='Standard fire curve', color='maroon')
##plt.plot(t10['Time in Minutes'],t10['Pb1-Pb2-Mid-Left'], label='T10-Pb1-Pb2-Mid-Left', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Pb1-Pb2-Mid-Mid'], label='T10-Pb1-Pb2-Mid-Mid', color='C0', markevery=1000, ms=4, marker='v')
#plt.plot(t10['Time in Minutes'],t10['Pb1-Pb2-Mid-Right'], label='T10-Pb1-Pb2-Mid-Right', color='C1', markevery=1000, ms=4, marker='s')
##plt.title('T10-Pb1-Pb2')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Pb1-Pb2.pdf', bbox_inches='tight')
#plt.show()
#
#ax = plt.axes()     
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#ax.set_xlim([0,100])
##plt.plot(s['ISO 834-Time'],s['ISO 834-Temp'], linestyle='--', label='Standard fire curve', color='maroon')
##plt.plot(t10['Time in Minutes'],t10['Pb2-Top-Left'], label='T10-Pb2-Top-Left', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Pb2-Top-Right'], label='T10-Pb2-Top-Right', color='C0', markevery=1000, ms=4, marker='v')
#plt.plot(t10['Time in Minutes'],t10['Pb2-Mid-Mid'], label='T10-Pb2-Mid-Mid', color='C1', markevery=1000, ms=4, marker='s')
#plt.plot(t10['Time in Minutes'],t10['Pb2-Bottom-Left'], label='T10-Pb2-Bottom-Left', color='C2', markevery=1000, ms=4, marker='d')
#plt.plot(t10['Time in Minutes'],t10['Pb2-Bottom-Right'], label='T10-Pb2-Bottom-Right', color='C4', markevery=1000, ms=4, marker='>')
##plt.title('T10-Pb2')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Pb2.pdf', bbox_inches='tight')
#plt.show()
#
#ax = plt.axes()     
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#ax.set_xlim([0,100])
##plt.plot(s['ISO 834-Time'],s['ISO 834-Temp'], linestyle='--', label='Standard fire curve', color='maroon')
#plt.plot(t10['Time in Minutes'],t10['Pb3-Top-Left'], label='T10-Pb3-Top-Left', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Pb3-Top-Right'], label='T10-Pb3-Top-Right', color='C0', markevery=1000, ms=4, marker='v')
#plt.plot(t10['Time in Minutes'],t10['Pb3-Mid-Mid'], label='T10-Pb3-Mid-Mid', color='C1', markevery=1000, ms=4, marker='s')
#plt.plot(t10['Time in Minutes'],t10['Pb3-Bottom-Left'], label='T10-Pb3-Bottom-Left', color='C2', markevery=1000, ms=4, marker='d')
##plt.plot(t10['Time in Minutes'],t10['Pb3-Bottom-Right'], label='T10-Pb3-Bottom-Right', color='C4', markevery=1000, ms=4, marker='>')
##plt.title('T10-Pb3')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Pb3.pdf', bbox_inches='tight')
#plt.show()
#
#ax = plt.axes()     
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#ax.set_xlim([0,100])
##plt.plot(s['ISO 834-Time'],s['ISO 834-Temp'], linestyle='--', label='Standard fire curve', color='maroon')
#plt.plot(t10['Time in Minutes'],t10['Pb3-Pb4-Mid-Left'], label='T10-Pb3-Pb4-Mid-Left', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Pb3-Pb4-Mid-Mid'], label='T10-Pb3-Pb4-Mid-Mid', color='C0', markevery=1000, ms=4, marker='v')
#plt.plot(t10['Time in Minutes'],t10['Pb3-Pb4-Mid-Right'], label='T10-Pb3-Pb4-Mid-Right', color='C1', markevery=1000, ms=4, marker='s')
##plt.title('T10-Pb3-Pb4')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Pb3-Pb4.pdf', bbox_inches='tight')
#plt.show()
#
#ax = plt.axes()     
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#ax.set_xlim([0,100])
##plt.plot(s['ISO 834-Time'],s['ISO 834-Temp'], linestyle='--', label='Standard fire curve', color='maroon')
#plt.plot(t10['Time in Minutes'],t10['Pb4-Top-Left'], label='T10-Pb4-Top-Left', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Pb4-Top-Right'], label='T10-Pb4-Top-Right', color='C0', markevery=1000, ms=4, marker='v')
#plt.plot(t10['Time in Minutes'],t10['Pb4-Mid-Mid'], label='T10-Pb4-Mid-Mid', color='C1', markevery=1000, ms=4, marker='s')
#plt.plot(t10['Time in Minutes'],t10['Pb4-Bottom-Left'], label='T10-Pb4-Bottom-Left', color='C2', markevery=1000, ms=4, marker='d')
#plt.plot(t10['Time in Minutes'],t10['Pb4-Bottom-Right'], label='T10-Pb4-Bottom-Right', color='C4', markevery=1000, ms=4, marker='>')
#plt.plot(t10['Time in Minutes'],t10['Pb4-Top of Stud'], label='T10-Pb4-Top of stud', color='C5', markevery=1000, ms=4, marker='+')
#plt.plot(t10['Time in Minutes'],t10['Pb4-Inbetween stud'], label='T10-Pb4-Inbetween stud', color='C6', markevery=1000, ms=4, marker='<')
##plt.title('T10-Pb4')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Pb4.pdf', bbox_inches='tight')
#plt.show()

#ax = plt.axes()        
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#plt.plot(t10['Time in Minutes'],t10['Stud2-Top-Amb-HF'], label='T10-Stud2-Top-Amb-HF', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Stud2-Top-Amb-CF'], label='T10-Stud2-Top-Amb-CF', color='C0', markevery=1000, ms=4, marker='v')
##plt.title('T10-Stud2-Top-Amb')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Stud2-Top-Amb.pdf', bbox_inches='tight')
#plt.show()
#
#ax = plt.axes()        
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#plt.plot(t10['Time in Minutes'],t10['Stud2-Mid-Fire-HF'], label='T10-Stud2-Mid-Fire-HF', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Stud2-Mid-Fire-CF'], label='T10-Stud2-Mid-Fire-CF', color='C0', markevery=1000, ms=4, marker='v')
#plt.plot(t10['Time in Minutes'],t10['Stud2-Mid-Amb-HF'], label='T10-Stud2-Mid-Amb-HF', color='C1', markevery=1000, ms=4, marker='s')
#plt.plot(t10['Time in Minutes'],t10['Stud2-Mid-Amb-CF'], label='T10-Stud2-Mid-Amb-CF', color='C2', markevery=1000, ms=4, marker='d')
##plt.title('T10-Stud2-Mid')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Stud2-Mid.pdf', bbox_inches='tight')
#plt.show()
#
#ax = plt.axes()        
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#plt.plot(t10['Time in Minutes'],t10['Stud2-Bottom-Amb-HF'], label='T10-Stud2-Bottom-Amb-HF', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Stud2-Bottom-Amb-CF'], label='T10-Stud2-Bottom-Amb-CF', color='C0', markevery=1000, ms=4, marker='v')
##plt.title('T10-Stud2-Bottom-Amb')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Stud2-Bottom-Amb.pdf', bbox_inches='tight')
#plt.show()

ax = plt.axes()        
ax.yaxis.grid(True, linestyle=':') # horizontal lines
ax.xaxis.grid(True, linestyle=':') # vertical lines
ax.xaxis.label.set_size(12)
ax.yaxis.label.set_size(12)
plt.plot(t10['Time in Minutes'],t10['Stud3-Top-Fire-HF'], label='T10-Stud3-Top-Fire-HF', color='red', markevery=1000, ms=4, marker='o')
plt.plot(t10['Time in Minutes'],t10['Stud3-Top-Fire-CF'], label='T10-Stud3-Top-Fire-CF', color='C0', markevery=1000, ms=4, marker='v')
plt.plot(t10['Time in Minutes'],t10['Stud3-Top-Amb-HF'], label='T10-Stud3-Top-Amb-HF', color='C1', markevery=1000, ms=4, marker='s')
plt.plot(t10['Time in Minutes'],t10['Stud3-Top-Amb-CF'], label='T10-Stud3-Top-Amb-CF', color='C2', markevery=1000, ms=4, marker='d')
#plt.title('T10-Stud3-Top')
plt.xlabel('Time(min)', fontsize=14)
plt.ylabel('Temperature(°C)', fontsize=14)
plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
plt.gcf()
plt.savefig('T10-Stud3-Top.pdf', bbox_inches='tight')
plt.show()

#ax = plt.axes()        
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#plt.plot(t10['Time in Minutes'],t10['Stud3-Mid-Fire-HF'], label='T10-Stud3-Mid-Fire-HF', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Stud3-Mid-Fire-CF'], label='T10-Stud3-Mid-Fire-CF', color='C0', markevery=1000, ms=4, marker='v')
#plt.plot(t10['Time in Minutes'],t10['Stud3-Mid-Amb-HF'], label='T10-Stud3-Mid-Amb-HF', color='C1', markevery=1000, ms=4, marker='s')
#plt.plot(t10['Time in Minutes'],t10['Stud3-Mid-Amb-CF'], label='T10-Stud3-Mid-Amb-CF', color='C2', markevery=1000, ms=4, marker='d')
##plt.title('T10-Stud3-Mid')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Stud3-Mid.pdf', bbox_inches='tight')
#plt.show()
#
#ax = plt.axes()        
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#plt.plot(t10['Time in Minutes'],t10['Stud3-Bottom-Fire-HF'], label='T10-Stud3-Bottom-Fire-HF', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Stud3-Bottom-Fire-CF'], label='T10-Stud3-Bottom-Fire-CF', color='C0', markevery=1000, ms=4, marker='v')
#plt.plot(t10['Time in Minutes'],t10['Stud3-Bottom-Amb-HF'], label='T10-Stud3-Bottom-Amb-HF', color='C1', markevery=1000, ms=4, marker='s')
#plt.plot(t10['Time in Minutes'],t10['Stud3-Bottom-Amb-CF'], label='T10-Stud3-Bottom-Amb-CF', color='C2', markevery=1000, ms=4, marker='d')
##plt.title('T10-Stud3-Bottom')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Stud3-Bottom.pdf', bbox_inches='tight')
#plt.show()
#
#ax = plt.axes()        
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#plt.plot(t10['Time in Minutes'],t10['Stud4-Top-Fire-HF'], label='T10-Stud4-Top-Fire-HF', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Stud4-Top-Fire-CF'], label='T10-Stud4-Top-Fire-CF', color='C0', markevery=1000, ms=4, marker='v')
##plt.title('T10-Stud4-Top')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Stud4-Top.pdf', bbox_inches='tight')
#plt.show()
#
#ax = plt.axes()        
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#plt.plot(t10['Time in Minutes'],t10['Stud4-Mid-Fire-HF'], label='T10-Stud4-Mid-Fire-HF', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Stud4-Mid-Fire-CF'], label='T10-Stud4-Mid-Fire-CF', color='C0', markevery=1000, ms=4, marker='v')
#plt.plot(t10['Time in Minutes'],t10['Stud4-Mid-Amb-HF'], label='T10-Stud4-Mid-Amb-HF', color='C1', markevery=1000, ms=4, marker='s')
#plt.plot(t10['Time in Minutes'],t10['Stud4-Mid-Amb-CF'], label='T10-Stud4-Mid-Amb-CF', color='C2', markevery=1000, ms=4, marker='d')
##plt.title('T10-Stud4-Mid')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Stud4-Mid.pdf', bbox_inches='tight')
#plt.show()
#
#ax = plt.axes()        
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#plt.plot(t10['Time in Minutes'],t10['Stud4-Bottom-Fire-HF'], label='T10-Stud4-Bottom-Fire-HF', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Stud4-Bottom-Fire-CF'], label='T10-Stud4-Bottom-Fire-CF', color='C0', markevery=1000, ms=4, marker='v')
#plt.plot(t10['Time in Minutes'],t10['Stud4-Bottom-Amb-HF'], label='T10-Stud4-Bottom-Amb-HF', color='C1', markevery=1000, ms=4, marker='s')
#plt.plot(t10['Time in Minutes'],t10['Stud4-Bottom-Amb-CF'], label='T10-Stud4-Bottom-Amb-CF', color='C2', markevery=1000, ms=4, marker='d')
##plt.title('T10-Stud4-Bottom')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Stud4-Bottom.pdf', bbox_inches='tight')
#plt.show()
#
#ax = plt.axes()        
#ax.yaxis.grid(True, linestyle=':') # horizontal lines
#ax.xaxis.grid(True, linestyle=':') # vertical lines
#ax.xaxis.label.set_size(12)
#ax.yaxis.label.set_size(12)
#plt.plot(t10['Time in Minutes'],t10['Stud5-Mid-Fire-HF'], label='T10-Stud5-Mid-Fire-HF', color='red', markevery=1000, ms=4, marker='o')
#plt.plot(t10['Time in Minutes'],t10['Stud5-Mid-Fire-CF'], label='T10-Stud5-Mid-Fire-CF', color='C0', markevery=1000, ms=4, marker='v')
##plt.title('T10-Stud5-Mid')
#plt.xlabel('Time(min)')
#plt.ylabel('Temperature(°C)')
#plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
#plt.gcf()
#plt.savefig('T10-Stud5-Mid.pdf', bbox_inches='tight')
#plt.show()

ax = plt.axes()        
ax.yaxis.grid(True, linestyle=':') # horizontal lines
ax.xaxis.grid(True, linestyle=':') # vertical lines
ax.xaxis.label.set_size(12)
ax.yaxis.label.set_size(12)
plt.plot(t10['Time in Minutes'],t10['Stud2-Axial'], label='T10-Stud2-Axial', color='red', markevery=1000, ms=4, marker='o')
plt.plot(t10['Time in Minutes'],t10['Stud3-Axial'], label='T10-Stud3-Axial', color='C0', markevery=1000, ms=4, marker='v')
plt.plot(t10['Time in Minutes'],t10['Stud4-Axial'], label='T10-Stud4-Axial', color='C1', markevery=1000, ms=4, marker='s')
plt.plot(t10['Time in Minutes'],t10['Stud5-Axial'], label='T10-Stud5-Axial', color='C2', markevery=1000, ms=4, marker='d')
#plt.title('T10-Time vs Axial Displacement')
plt.xlabel('Time(min)', fontsize=14)
plt.ylabel('Axial Displacement(mm)', fontsize=14)
plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
plt.gcf()
plt.savefig('T10-Axial.pdf', bbox_inches='tight')
plt.show()

ax = plt.axes()        
ax.yaxis.grid(True, linestyle=':') # horizontal lines
ax.xaxis.grid(True, linestyle=':') # vertical lines
ax.xaxis.label.set_size(12)
ax.yaxis.label.set_size(12)
plt.plot(t10['Time in Minutes'],t10['Stud2-Top'], label='T10-Stud2-Top', color='C0', markevery=1000, ms=4, marker='o')
plt.plot(t10['Time in Minutes'],t10['Stud2-Mid'], label='T10-Stud2-Mid', color='C1', markevery=1000, ms=4, marker='v')
plt.plot(t10['Time in Minutes'],t10['Stud2-Bottom'], label='T10-Stud2-Bottom', color='C2', markevery=1000, ms=4, marker='s')
plt.plot(t10['Time in Minutes'],t10['Stud3-Top'], label='T10-Stud3-Lateral', color='C3', markevery=1000, ms=4, marker='d')
plt.plot(t10['Time in Minutes'],t10['Stud3-Mid'], label='T10-Stud3-Lateral', color='C4', markevery=1000, ms=4, marker='>')
plt.plot(t10['Time in Minutes'],t10['Stud3-Bottom'], label='T10-Stud3-Lateral', color='C5', markevery=1000, ms=4, marker='+')
#plt.title('T10-Time vs Lateral Displacement')
plt.xlabel('Time(min)', fontsize=14)
plt.ylabel('Lateral Deflection(mm)', fontsize=14)
plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=3)
plt.gcf()
plt.savefig('T10-Lateral.pdf', bbox_inches='tight')
plt.show()

ax = plt.axes()        
ax.yaxis.grid(True, linestyle=':') # horizontal lines
ax.xaxis.grid(True, linestyle=':') # vertical lines
ax.xaxis.label.set_size(12)
ax.yaxis.label.set_size(12)
ax.set_ylim([0,38])
plt.plot(t10['Time in Minutes'],t10['Load in kN'], label='T10-Load', color='C0', markevery=1000, ms=4, marker='o')
#plt.title('T10-Time vs Applied Axial Load')
plt.xlabel('Time(min)', fontsize=14)
plt.ylabel('Applied Axial Load(kN)', fontsize=14)
plt.legend(fontsize=14, loc=9, bbox_to_anchor=(0.5, -0.15), ncol=2)
plt.gcf()
plt.savefig('T10-Load.pdf', bbox_inches='tight')
plt.show()